# Konfigurasi Database PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/login_logout_db
spring.datasource.username=postgres
spring.datasource.password=Apang123
# Driver JDBC yang digunakan untuk menghubungkan aplikasi dengan PostgreSQL.
spring.datasource.driver-class-name=org.postgresql.Driver


# JPA & Hibernate Configuration
# Dialek Hibernate yang digunakan untuk PostgreSQL, menentukan sintaks SQL spesifik PostgreSQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Opsi untuk Hibernate mengelola skema database:
# `update`: Memperbarui skema database sesuai dengan model entitas tanpa menghapus data.
spring.jpa.hibernate.ddl-auto=update
# Menampilkan query SQL yang dihasilkan oleh Hibernate di konsol untuk debugging.
spring.jpa.show-sql=true
# Platform database JPA yang digunakan untuk PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# Thymeleaf Configuration
# Direktori default tempat template Thymeleaf disimpan di dalam aplikasi
spring.thymeleaf.prefix=classpath:/templates/
# Ekstensi file untuk template Thymeleaf, dalam hal ini adalah ".html".
spring.thymeleaf.suffix=.html
# Menonaktifkan caching pada template selama pengembangan sehingga perubahan pada file template langsung terlihat tanpa perlu restart server.
spring.thymeleaf.cache=false


# Menghindari Whitelabel Error
server.error.whitelabel.enabled=false
# Menonaktifkan halaman kesalahan default (Whitelabel Error Page) Spring Boot. Berguna untuk menampilkan custom error page.

# Optional: Jika mengalami masalah dengan Bean overriding
spring.main.allow-bean-definition-overriding=true
# Mengizinkan definisi bean dengan nama yang sama untuk menimpa definisi yang ada. Berguna jika ada konflik bean dalam aplikasi kompleks.

